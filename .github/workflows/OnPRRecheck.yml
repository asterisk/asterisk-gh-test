name: PRReCheck
run-name: "PR ${{github.event.number}} Recheck"
on:
  pull_request_target:
    types: [ labeled ]

concurrency:
  group: check-${{github.event.number}}
  cancel-in-progress: true

jobs:
  Setup:
    runs-on: ubuntu-latest
    outputs:
      testsuite_test_pr:  ${{ steps.testsuitepr.outputs.testsuite_test_pr }}
    steps:
      - name: Set Label
        id: setlabel
        env:
          GH_TOKEN:  ${{ secrets.TOKEN }}
        run: |
          gh pr edit --repo ${{github.repository}} \
            --remove-label ${{vars.RECHECKPR_LABEL}} \
            --remove-label ${{vars.PR_SUBMIT_TESTS_PASSED}} \
            --remove-label  ${{vars.PR_SUBMIT_TESTS_FAILED}} \
            --add-label ${{vars.PR_SUBMIT_TESTING_IN_PROGRESS}} \
            $PR_NUMBER || :

      - name: GetTestsuitePR
        id: testsuitepr
        uses: asterisk/asterisk-ci-actions/GetTestsuitePRFromAsteriskPR@main
        with:
          repo:     ${{github.repository}}
          pr_number: ${{github.event.number}}
          testsuite_test_pr_regex: ${{ vars.TESTSUITE_TEST_PR_REGEX }}
          testsuite_test_auto_merge_regex: ${{ vars.TESTSUITE_TEST_AUTO_MERGE_REGEX }}
          github_token: ${{ secrets.TOKEN }}

  ReCheck:
    name: ReCheck
    needs: Setup
    uses: ./.github/workflows/AsteriskUnitGateTest.yml
    with:
      test_type:         prrecheck
      asterisk_repo:     ${{github.repository}}
      pr_number:         ${{github.event.number}}
      base_branch:       ${{github.event.pull_request.base.ref}}
      is_cherry_pick:    false
      build_options:     ${{vars.BUILD_OPTIONS}}
      unittest_command:  ${{vars.UNITTEST_COMMAND}}
      testsuite_repo:    ${{vars.TESTSUITE_REPO}}
      testsuite_test_pr: ${{ needs.Setup.outputs.testsuite_test_pr }}
      gatetest_list:     ${{vars.GATETEST_LIST}}
      gatetest_commands: ${{vars.GATETEST_COMMANDS}}
    secrets: inherit

  Cleanup:
    if: always()
    runs-on: ubuntu-latest
    needs: [ReCheck]
    steps:
      - name: Check status
        env:
          GH_TOKEN:  ${{ secrets.TOKEN }}
          RESULT_UNIT: ${{ needs.PRCheck.result }}
          TESTS_PASSED: ${{ vars.PR_SUBMIT_TESTS_PASSED }}
          TESTS_FAILED: ${{ vars.PR_SUBMIT_TESTS_FAILED }}
        run: |
          declare -i rc=0
          case $RESULT_UNIT in
            success)
              ;;
            skipped)
              rc+=1
              ;;
            *)
              rc+=1
          esac
          
          label=$TESTS_PASSED
          if [ $rc != 0 ] ; then
            label=$TESTS_FAILED
          fi
          gh pr edit --repo ${{github.repository}} \
            --remove-label ${{vars.PR_SUBMIT_TESTING_IN_PROGRESS}} \
            --add-label $label \
              $PR_NUMBER || :
          exit $rc
