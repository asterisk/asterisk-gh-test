name: Process Pull Request Test
run-name: ${{ github.actor }} is doing a test pull request
on:
  workflow_dispatch:
#  issue_comment
#  pull_request:
#    types: [opened, reopened]

jobs:
  AsteriskUnitTestsTest:
#    if: (github.event.issue.pull_request && startsWith(github.event.comment.body, 'recheck'))
    runs-on: ubuntu-latest
    container:
      image: public.ecr.aws/t8c9l3c7/asteriskci-agent-rocky8:latest
      volumes:
        - /srv/cache/unittests:/usr/src/asterisk/asterisk-gh-test/asterisk
    steps:
      - name: Setup for local ACT
        if: ${{ env.ACT }}
        run: |
          if [ -z "${ASTERISK_CI_URL}" ] || [ -z "${ASTERISK_URL}" ] ; then
            echo "::error::ASTERISK_CI_URL and ASTERISK_URL must be set in the environment"
            exit 1
          fi
          echo "::notice::Setting ASTERISK_CI_URL and ASTERISK_URL from environment"
          echo "PWD: $PWD"
          mount

      - name: Checkout Asterisk
        uses: actions/checkout@v3
        with:
          path: 'asterisk'
          # Whether to execute `git clean -ffdx && git reset --hard HEAD` before fetching
          # Default: true
          clean: true
          fetch-depth: 1
          # Add repository path as safe.directory for Git global config by running `git
          # config --global --add safe.directory <path>`
          # Default: true
          set-safe-directory: true

      - name: Write xml
        run: |
          cat >asterisk/unittests-results.xml <<-EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <testsuites>
            <testsuite errors="0" time="0.0" tests="693" name="AsteriskUnitTests">
              <properties>
                <property name="version" value="GIT-master-506e84e2c2M"/>
              </properties>
              <testcase time="0.0" classname="TEST_PASS_FAIL" name="JUST_PASS"/>
              <testcase time="0.0" classname="TEST_PASS_FAIL" name="JUST_FAIL">
                <failure><![CDATA[
                [test_pbx.c:just_fail:400]: This test just forces a fail
                ]]></failure>
              </testcase>
            </testsuite>
          </testsuites>
          EOF
          echo "::group::github_trigger_event"
          echo '${{ toJSON(github.event) }}' > asterisk/event.json
          echo "::endgroup::"
          echo "::group::env"
          echo '${{ toJSON(env) }}' > asterisk/env.json
          echo "::endgroup::"

      - name: Save Output
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: asterisk/unittests-results.xml

      - name: Save Event Payload
        uses: actions/upload-artifact@v3
        with:
          name: Event File
          path: ${{ github.event_path }}
