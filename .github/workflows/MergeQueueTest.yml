name: MergeQueueTest
run-name: "Merge Queue Tests"
on:
  merge_group:

env:
  ASTERISK_REPO:     ${{github.repository}}
  BRANCH:            ${{github.event.pull_request.base.ref}}
  GITHUB_TOKEN:      ${{secrets.GITHUB_TOKEN}}
  MODULES_BLACKLIST: ${{vars.GATETEST_MODULES_BLACKLIST}} ${{vars.UNITTEST_MODULES_BLACKLIST}}

jobs:
  MergeQueueUnitTests:
    runs-on: ubuntu-latest
    steps:
      - name: DumpEnvironment
        uses: asterisk/asterisk-ci-actions/DumpEnvironmentAction@main
        with:
          action-vars: ${{toJSON(vars)}}

      - name: Set Labels
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          exit 1

      - name: Run Unit Tests
        uses: asterisk/asterisk-ci-actions/AsteriskUnitComposite@main
        with:
          asterisk_repo:     ${{env.ASTERISK_REPO}}
          pr_number:         ${{env.PR_NUMBER}}
          base_branch:       ${{env.BRANCH}}
          modules_blacklist: ${{env.MODULES_BLACKLIST}}
          github_token:      ${{secrets.GITHUB_TOKEN}}
          unittest_command:  ${{vars.UNITTEST_COMMAND}}

  MergeQueueGateTestMatrix:
    needs: MergeQueueUnitTests
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        group: ${{ fromJSON(vars.GATETEST_LIST) }}
    runs-on: ubuntu-latest
    steps:
      - id: runtest
        name: Run Gate Tests for ${{ matrix.group }}
        uses: asterisk/asterisk-ci-actions/AsteriskGateComposite@main
        with:
          test_type:         Gate
          asterisk_repo:     ${{env.ASTERISK_REPO}}
          pr_number:         ${{env.PR_NUMBER}}
          base_branch:       ${{env.BRANCH}}
          modules_blacklist: ${{env.MODULES_BLACKLIST}}
          github_token:      ${{secrets.GITHUB_TOKEN}}
          testsuite_repo:    ${{vars.TESTSUITE_REPO}}
          gatetest_group:    ${{matrix.group}}
          gatetest_commands: ${{vars.GATETEST_COMMANDS}}


  MergeQueueGateTests:
    if: always()
    runs-on: ubuntu-latest
    needs: MergeQueueGateTestMatrix
    steps:
      - name: Check test matrix status
        env:
          RESULT: ${{ needs.MergeQueueGateTestMatrix.result }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "all results: ${{ toJSON(needs.*.result) }}"
          echo "composite result: $RESULT"

          case $RESULT in
            success)
              echo "::notice::All Testsuite tests passed"
              exit 0
              ;;
            skipped)
              echo "::error::Testsuite tests were skipped because of an earlier failure"
              exit 1
              ;;
            *)
              echo "::error::One or more Testsuite tests failed ($RESULT)"
              exit 1
          esac
