name: PRSubmitTests
run-name: "PR ${{github.event.number}} ${{github.event.action}} by ${{ github.actor }}"
on:
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{github.workflow}}-${{github.event.number}}
  cancel-in-progress: true

env:
  ASTERISK_REPO:     ${{github.repository}}
  PR_NUMBER:         ${{github.event.number}}
  PR_COMMIT:         ${{github.event.pull_request.head.sha}}
  BRANCH:            ${{github.event.pull_request.base.ref}}

jobs:
#
# Pull requests created from forked respositories don't have access to
# the "Action Variables" ('vars' context) so we need to retrieve control
# data 
#
  PRSControlData:
    runs-on: ubuntu-latest
    outputs:
      control_data:  ${{ steps.setvars.outputs.control_data }}
    steps:
      - id: setvars
        uses: asterisk/asterisk-ci-actions/GetRepoControlData@main
        with:
          repo: ${{ github.event.repository.name}}
      - name: DumpEnvironment
        uses: asterisk/asterisk-ci-actions/DumpEnvironmentAction@main
        with:
          action-inputs: ${{toJSON(inputs)}}
          action-vars: ${{ toJSON(steps.setvars.outputs) }}

#  PRSUnitTests:
#    needs: PRSControlData
#    runs-on: ubuntu-latest
#    env:
#      UNITTEST_COMMAND: ${{ fromJSON(needs.PRSControlData.outputs.control_data).UNITTEST_COMMAND }}
#    steps:
#      - name: Run Unit Tests
#        uses: asterisk/asterisk-ci-actions/AsteriskUnitComposite@main
#        with:
#          asterisk_repo:     ${{env.ASTERISK_REPO}}
#          pr_number:         ${{env.PR_NUMBER}}
#          base_branch:       ${{env.BRANCH}}
#          unittest_command:  ${{env.UNITTEST_COMMAND}}
#
#  PRSGateTestMatrix:
#    needs: [PRSControlData,PRSUnitTests]
#    env:
#      TESTSUITE_REPO:    "${{ fromJSON(needs.PRSGetControlData.outputs.control_data).TESTSUITE_REPO }}"
#      GATETEST_COMMANDS: "${{ fromJSON(needs.PRSGetControlData.outputs.control_data).GATETEST_COMMANDS }}"
#    continue-on-error: false
#    strategy:
#      fail-fast: false
#      matrix:
#        group: ${{ fromJSON(fromJSON(needs.PRSGetControlData.outputs.control_data).GATETEST_LIST) }}
#    runs-on: ubuntu-latest
#    steps:
#      - id: runtest
#        name: Run Gate Tests for ${{ matrix.group }}
#        uses: asterisk/asterisk-ci-actions/AsteriskGateComposite@main
#        with:
#          test_type:         Gate
#          asterisk_repo:     ${{env.ASTERISK_REPO}}
#          pr_number:         ${{env.PR_NUMBER}}
#          base_branch:       ${{env.BRANCH}}
#          testsuite_repo:    ${{env.TESTSUITE_REPO}}
#          gatetest_group:    ${{matrix.group}}
#          gatetest_commands: ${{env.GATETEST_COMMANDS}}
#
#  PRSGateTests:
#    if: always()
#    runs-on: ubuntu-latest
#    needs: PRSGateTestMatrix
#    steps:
#      - name: Check test matrix status
#        env:
#          RESULT: ${{ needs.PRSGateTestMatrix.result }}
#        run: |
#          echo "all results: ${{ toJSON(needs.*.result) }}"
#          echo "composite result: $RESULT"
#          case $RESULT in
#            success)
#              echo "::notice::All Testsuite tests passed"
#              exit 0
#              ;;
#            skipped)
#              echo "::error::Testsuite tests were skipped because of an earlier failure"
#              exit 1
#              ;;
#            *)
#              echo "::error::One or more Testsuite tests failed ($RESULT)"
#              exit 1
#          esac
