name: PRSubmitTests
run-name: "PR ${{github.event.number}} ${{github.event.action}} by ${{ github.actor }}"
on:
  pull_request:
    types: [opened, reopened, synchronize]

env:
  ASTERISK_REPO:     ${{github.repository}}
  PR_NUMBER:         ${{github.event.number}}
  PR_COMMIT:         ${{github.event.pull_request.head.sha}}
  BRANCH:            ${{github.event.pull_request.base.ref}}
  MODULES_BLACKLIST: ${{vars.GATETEST_MODULES_BLACKLIST}} ${{vars.UNITTEST_MODULES_BLACKLIST}}

jobs:

  PRSubmitUnitTests:
    runs-on: ubuntu-latest
    steps:
      - name: Run Unit Tests
        uses: asterisk/asterisk-ci-actions/AsteriskUnitComposite@main
        with:
          asterisk_repo:     ${{env.ASTERISK_REPO}}
          pr_number:         ${{env.PR_NUMBER}}
          base_branch:       ${{env.BRANCH}}
          modules_blacklist: ${{env.MODULES_BLACKLIST}}
          unittest_command:  ${{vars.UNITTEST_COMMAND}}

  PRSubmitGateTestMatrix:
    needs: PRSubmitUnitTests
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        group: ${{ fromJSON(vars.GATETEST_LIST) }}
    runs-on: ubuntu-latest
    steps:
      - id: runtest
        name: Run Gate Tests for ${{ matrix.group }}
        uses: asterisk/asterisk-ci-actions/AsteriskGateComposite@main
        with:
          test_type:         Gate
          asterisk_repo:     ${{env.ASTERISK_REPO}}
          pr_number:         ${{env.PR_NUMBER}}
          base_branch:       ${{env.BRANCH}}
          modules_blacklist: ${{env.MODULES_BLACKLIST}}
          testsuite_repo:    ${{vars.TESTSUITE_REPO}}
          gatetest_group:    ${{matrix.group}}
          gatetest_commands: ${{vars.GATETEST_COMMANDS}}

  PRSubmitGateTests:
    if: always()
    runs-on: ubuntu-latest
    needs: PRSubmitGateTestMatrix
    steps:
      - name: Check test matrix status
        env:
          RESULT: ${{ needs.PRSubmitGateTestMatrix.result }}
        run: |
          echo "all results: ${{ toJSON(needs.*.result) }}"
          echo "composite result: $RESULT"
          case $RESULT in
            success)
              echo "::notice::All Testsuite tests passed"
              exit 0
              ;;
            skipped)
              echo "::error::Testsuite tests were skipped because of an earlier failure"
              exit 1
              ;;
            *)
              echo "::error::One or more Testsuite tests failed ($RESULT)"
              exit 1
          esac
