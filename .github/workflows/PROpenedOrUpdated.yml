name: PROpenedOrUpdated
run-name: "PR ${{github.event.number}} ${{github.event.action}} by ${{ github.actor }}"
on:
#  workflow_dispatch:
  pull_request_target:
    types: [opened, reopened, synchronize]

env:
  ASTERISK_REPO:     ${{github.repository}}
  PR_NUMBER:         ${{github.event.number}}
  PR_COMMIT:         ${{github.event.pull_request.head.sha}}
  BRANCH:            ${{github.event.pull_request.base.ref}}
  GITHUB_TOKEN:      ${{secrets.GITHUB_TOKEN}}
  MODULES_BLACKLIST: ${{vars.GATETEST_MODULES_BLACKLIST}} ${{vars.UNITTEST_MODULES_BLACKLIST}}

jobs:
  AsteriskUnitTests:
    runs-on: ubuntu-latest
    steps:
      - name: Install Asterisk
        uses: asterisk/asterisk-ci-actions/GetAsterisk@main
        with:
          asterisk_repo:     ${{env.ASTERISK_REPO}}
          base_branch:       ${{env.BRANCH}}
          pr_number:         ${{env.PR_NUMBER}}
          github_token:      ${{secrets.GITHUB_TOKEN}}
          modules_blacklist: ${{env.MODULES_BLACKLIST}}

      - name: Run Unit Tests
        uses: asterisk/asterisk-ci-actions/RunAsteriskUnitTests@main
        with:
          asterisk_repo:    ${{env.ASTERISK_REPO}}
          pr_number:        ${{env.PR_NUMBER}}
          base_branch:      ${{env.BRANCH}}
          github_token:     ${{secrets.GITHUB_TOKEN}}
          unittest_command: ${{vars.UNITTEST_COMMAND}}

      - name: Save Output
        id: save-output
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: Unit Test Output
          path: cache/output

      - name: Publish Unit Test Results
        id: publish-results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2.4.2
        with:
          check_name: Unit Test Results
          files: cache/output/*.xml
          comment_mode: always
          action_fail: true
        env:
          GITHUB_REPOSITORY: ${{env.ASTERISK_REPO}}

      - name: Get Token needed to add reviewers
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{secrets.ASTERISK_ORG_ACCESS_APP_ID}}
          application_private_key: ${{secrets.ASTERISK_ORG_ACCESS_APP_PRIV_KEY}}
          organization: asterisk

      - name: Add Reviewers
        if: ${{ success() }}
        env:
          GITHUB_TOKEN: ${{steps.get_workflow_token.outputs.token}}
          GH_TOKEN: ${{steps.get_workflow_token.outputs.token}}
          REVIEWERS: ${{vars.PR_REVIEWERS}}
        run: |
          echo "${{env.GITHUB_ACTION}} Add reviewers"
          IFS=$'; \n'
          for r in $REVIEWERS ; do
            gh pr edit --repo ${ASTERISK_REPO} ${PR_NUMBER} --add-reviewer $r
          done

  AsteriskGateTestMatrix:
    needs: AsteriskUnitTests
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        group: ${{ fromJSON(vars.GATETEST_LIST) }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Asterisk
        uses: asterisk/asterisk-ci-actions/GetAsterisk@main
        with:
          asterisk_repo:     ${{env.ASTERISK_REPO}}
          base_branch:       ${{env.BRANCH}}
          pr_number:         ${{env.PR_NUMBER}}
          github_token:      ${{secrets.GITHUB_TOKEN}}
          modules_blacklist: ${{env.MODULES_BLACKLIST}}
    
      - name: Run Gate Tests for group ${{ matrix.group }}
        uses: asterisk/asterisk-ci-actions/RunAsteriskGateTests@main
        with:
          asterisk_repo:     ${{env.ASTERISK_REPO}}
          pr_number:         ${{env.PR_NUMBER}}
          base_branch:       ${{env.BRANCH}}
          github_token:      ${{secrets.GITHUB_TOKEN}}
          testsuite_repo:    ${{vars.TESTSUITE_REPO}}
          gatetest_group:    ${{matrix.group}}
          gatetest_commands: ${{vars.GATETEST_COMMANDS}} 

      - name: Save Output
        id: save-output
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: Gate Test Output
          path: testsuite/logs

      - name: Publish Unit Test Results
        id: publish-results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2.4.2
        with:
          check_name: Unit Test Results
          files: testsuite/*.xml
          comment_mode: always
          action_fail: true
        env:
          GITHUB_REPOSITORY: ${{env.ASTERISK_REPO}}

  AsteriskGateTests:
    name: AsteriskGateTests
#    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: AsteriskGateTestMatrix
    steps:
      - name: Check test matrix status
        env:
          RESULT: ${{ needs.AsteriskGateTestMatrix.result }}
        run: |
          case $RESULT in
            success)
              echo "::notice::All Testsuite tests passed"
              exit 0
              ;;
            skipped)
              echo "::notice::No Testsuite were run but there should have been"
              exit 1
              ;;
              *)
              echo "::error::One or more Testsuite tests failed" 
              exit 1
          esac
